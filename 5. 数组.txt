数组：
一维数组的创建和初始化：
	- 数组是一组相同类型的元素的集合，语法：数组数据类型 数组名[常量个数];
		如：int arr[10];		//注意：[]内需要常量表达式
	- 数组初始化：
		数组的初始化是指，在创建数组的同时给数组的内容一些合理化的值
			如：int arr[10] = { 1,2,3 };    //这种叫不完全初始化，这种方法初始化剩下的元素默认为0
			注意：由于数组是相同类型元素的集合，所以当int类型的数组里有字符的时候，会转换成ASCII值
		- 我们还可以在'[]'不设定任何值，那数组会自适应长度，如：char arr[] = { 'a','b'};
		- 并且我们求字符串长度的时候，'sizeof'和'strlen'是不一样，前者是求字符所占的控件，所以'\0'也会计算，而后者只求字符串长度，两者不相同
		- sizeof()是求变量、数组、类型的大小 --> 单位是字节 --> 操作符
		- strlen()只能求字符串的疮毒 --> 库函数 --> 需要头文件
	- 下标引用操作符
		1. 数组是靠下标进行访问的，下标是从0开始的
		2. 数组的大小可以通过sizeof计算或者strlen得到

二维数组：
	- 如： int arr[3][4]; 代表这是一个三行四列的二维数组
	- 我们如果把数值放变量到里面，如：int arr[3][4] = {1,2,3,4,5};		//这样数值会按照顺序依次放入二维数组里面，会有3行数组，行1为1,2,3,4，行2为5,0,0,0
		我们还可以指定数值存放的位置，如：int arr[3][4] = {{1,2,3},{4,5}};		//这样行1存放的是1,2,3,0，行2是4,5,0,0
	- 二维数组当中，如果我们[]里面都不写常量，是不行的，列是必须要写的，行可以省略
	
数组作为函数参数
	- 只会传入首元素地址！
	我们可以用数组来做一个冒泡排序的程序，在"E:\学习\C 语言\课程项目\课程项目\练习题\冒泡排序法.c"当中

数组名是什么？
	- 数组名其实就是首元素的地址，所有将数组作为函数实参传入的时候才会是首元素地址。
	如：
		int arr[] = { 0,1,2,3,4 };
		printf("%p\n" ,arr);		//这里会答应arr[0]的地址
		printf("%d\n",*arr);	//这里打印的是0
	- 但有两个例外，即sizeof()和'&'取出的地址
		如：sizeof(arr);	这里代表的是数字内每个元素所占用的所有字节长度
				printf("%p\n" , &arr);		这里打印的结果虽然是第一个元素的地址，但是意义和前面的不同，这里代表的是从第一个元素地址开始的所有元素
				所以会发现打印&arr+1个元素不是数组的第二个元素
		除了这两种情况，之后遇到的所有数组名都是代表首元素地址






























